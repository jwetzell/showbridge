{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "Config",
  "title": "Config File Schema",
  "description": "oscee config JSON layout",
  "type": "object",
  "properties": {
    "http": {
      "title": "HTTP configuration",
      "type": "object",
      "properties": {
        "params": {
          "type": "object",
          "properties": {
            "port": {
              "description": "TCP port to listen on (this will be the same port used for websocket connections",
              "type": "number"
            }
          },
          "required": ["port"]
        },
        "triggers": {
          "description": "array of triggers",
          "type": "array",
          "items": {
            "type": "object",
            "oneOf": [{ "$ref": "#/definitions/TriggerSender" }, { "$ref": "#/definitions/TriggerRegex" }]
          }
        }
      },
      "required": ["triggers", "params"]
    },
    "ws": {
      "title": "WebSocket configuration",
      "type": "object",
      "properties": {
        "triggers": {
          "description": "array of triggers",
          "type": "array",
          "items": {
            "type": "object",
            "oneOf": [{ "$ref": "#/definitions/TriggerSender" }, { "$ref": "#/definitions/TriggerRegex" }]
          }
        }
      },
      "required": ["triggers"]
    },
    "osc": {
      "title": "OSC configuration",
      "type": "object",
      "properties": {
        "triggers": {
          "description": "array of triggers",
          "type": "array",
          "items": {
            "type": "object",
            "oneOf": [
              { "$ref": "#/definitions/TriggerSender" },
              { "$ref": "#/definitions/TriggerRegex" },
              { "$ref": "#/definitions/TriggerBytesEqual" }
            ]
          }
        }
      },
      "required": ["triggers"]
    },
    "midi": {
      "title": "MIDI configuration",
      "type": "object",
      "properties": {
        "triggers": {
          "description": "array of triggers",
          "type": "array",
          "items": {
            "type": "object",
            "oneOf": [
              { "$ref": "#/definitions/TriggerRegex" },
              { "$ref": "#/definitions/TriggerBytesEqual" },
              { "$ref": "#/definitions/TriggerMIDINoteOff" },
              { "$ref": "#/definitions/TriggerMIDINoteOn" }
            ]
          }
        }
      },
      "required": ["triggers"]
    },
    "tcp": {
      "title": "TCP configuration",
      "type": "object",
      "properties": {
        "params": {
          "type": "object",
          "properties": {
            "port": {
              "description": "TCP port to listen on",
              "type": "number"
            }
          },
          "required": ["port"]
        },
        "triggers": {
          "description": "array of triggers",
          "type": "array",
          "items": {
            "type": "object",
            "oneOf": [
              { "$ref": "#/definitions/TriggerRegex" },
              { "$ref": "#/definitions/TriggerSender" },
              { "$ref": "#/definitions/TriggerBytesEqual" }
            ]
          }
        }
      },
      "required": ["triggers", "params"]
    },
    "udp": {
      "title": "UDP configuration",
      "type": "object",
      "properties": {
        "params": {
          "type": "object",
          "properties": {
            "port": {
              "description": "UDP port to listen on",
              "type": "number"
            }
          },
          "required": ["port"]
        },
        "triggers": {
          "description": "array of triggers",
          "type": "array",
          "items": {
            "type": "object",
            "oneOf": [
              { "$ref": "#/definitions/TriggerRegex" },
              { "$ref": "#/definitions/TriggerSender" },
              { "$ref": "#/definitions/TriggerBytesEqual" }
            ]
          }
        }
      },
      "required": ["triggers", "params"]
    }
  },
  "required": ["http", "ws", "osc", "midi", "tcp", "udp"],
  "definitions": {
    "ActionList": {
      "description": "Actions to be performed if this trigger is fired",
      "type": "array",
      "items": {
        "type": "object",
        "oneOf": [
          { "$ref": "#/definitions/ActionLog" },
          { "$ref": "#/definitions/ActionMIDIOutput" },
          { "$ref": "#/definitions/ActionOSCForward" },
          { "$ref": "#/definitions/ActionOSCOutput" },
          { "$ref": "#/definitions/ActionUDPOutput" },
          { "$ref": "#/definitions/ActionTCPOutput" },
          { "$ref": "#/definitions/ActionShell" },
          { "$ref": "#/definitions/ActionHTTP" }
        ]
      }
    },

    "ActionLog": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "title": "Log Action",
      "description": "This action logs out the incoming message",
      "type": "object",
      "properties": {
        "type": {
          "const": "log"
        },
        "enabled": {
          "description": "Whether this action is enabled",
          "type": "boolean"
        }
      },
      "required": ["type", "enabled"]
    },
    "ActionMIDIOutput": {
      "title": "MIDI Output Action",
      "description": "This action will output MIDI using raw MIDI data byte array",
      "type": "object",
      "properties": {
        "type": {
          "const": "midi-output"
        },
        "params": {
          "description": "MIDI output action params",
          "type": "object",
          "properties": {
            "bytes": {
              "description": "MIDI data to be sent as an array of 3 bytes",
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 0,
                "maximum": 255
              },
              "minItems": 2,
              "maxItems": 3
            }
          },
          "required": ["bytes"]
        },
        "enabled": {
          "description": "Whether this action is enabled",
          "type": "boolean"
        }
      },
      "required": ["type", "enabled", "params"]
    },
    "ActionOSCForward": {
      "title": "Forward Action",
      "description": "This action will forward the incoming OSC to the configured address:port",
      "type": "object",
      "properties": {
        "type": {
          "const": "forward"
        },
        "params": {
          "description": "forward action params",
          "type": "object",
          "properties": {
            "host": {
              "description": "Hostname or address of the server to forward OSC to",
              "type": "string"
            },
            "port": {
              "description": "Port to forward msg to",
              "type": "integer"
            },
            "protocol": {
              "description": "Protocol to use when forwarding msg",
              "type": "string",
              "enum": ["udp", "tcp"]
            }
          },
          "required": ["host", "port", "protocol"]
        },
        "enabled": {
          "description": "Whether this action is enabled",
          "type": "boolean"
        }
      },
      "required": ["type", "enabled", "params"]
    },
    "ActionOSCOutput": {
      "title": "OSC Output Action",
      "description": "This action will send an OSC message to the configure address:port with the configured address and args",
      "type": "object",
      "properties": {
        "type": {
          "const": "osc-output"
        },
        "params": {
          "description": "OSC output action params",
          "type": "object",
          "properties": {
            "host": {
              "description": "Hostname or address of the server to send OSC to",
              "type": "string"
            },
            "port": {
              "description": "Port to send OSC to",
              "type": "integer"
            },
            "protocol": {
              "description": "Protocol to use when sending OSC",
              "type": "string",
              "enum": ["udp", "tcp"]
            },
            "_address": {
              "description": "JS template of the OSC address. Will have access to the msg object to subsitute in properties of the message that triggered this action",
              "type": "string"
            },
            "_args": {
              "description": "Array of args. Strings will be ran through the templating engine same as the _address param",
              "type": "array"
            },
            "address": {
              "description": "Hardcoded OSC address. _address has priority",
              "type": "string"
            },
            "args": {
              "description": "Hardcoded array of OSC args",
              "type": "array"
            }
          },
          "required": ["host", "port", "protocol"]
        },
        "enabled": {
          "description": "Whether this action is enabled",
          "type": "boolean"
        }
      },
      "required": ["type", "enabled", "params"]
    },
    "ActionUDPOutput": {
      "title": "UDP Output Action",
      "description": "This action will send a UDP packet to the configured address:port with the configured contents",
      "type": "object",
      "properties": {
        "type": {
          "const": "udp-output"
        },
        "params": {
          "description": "UDP output action params",
          "type": "object",
          "properties": {
            "host": {
              "description": "Hostname or address of the server to send UDP packet to",
              "type": "string"
            },
            "port": {
              "description": "Port to send UDP packet to",
              "type": "integer"
            },
            "bytes": {
              "description": "bytes to send",
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          "required": ["host", "port", "bytes"]
        },
        "enabled": {
          "description": "Whether this action is enabled",
          "type": "boolean"
        }
      },
      "required": ["type", "enabled", "params"]
    },
    "ActionTCPOutput": {
      "title": "TCP Output Action",
      "description": "This action will send a TCP packet to the configured address:port with the configured contents",
      "type": "object",
      "properties": {
        "type": {
          "const": "tcp-output"
        },
        "params": {
          "description": "TCP output action params",
          "type": "object",
          "properties": {
            "host": {
              "description": "Hostname or address of the server to send TCP packet to",
              "type": "string"
            },
            "port": {
              "description": "Port to send TCP packet to",
              "type": "integer"
            },
            "slip": {
              "description": "whether to SLIP encode the TCP bytes",
              "type": "boolean"
            },
            "bytes": {
              "description": "bytes to send",
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          "required": ["host", "port", "slip", "bytes"]
        },
        "enabled": {
          "description": "Whether this action is enabled",
          "type": "boolean"
        }
      },
      "required": ["type", "enabled", "params"]
    },
    "ActionShell": {
      "title": "Shell Command Action",
      "description": "This action will execute the configured shell command on the system that is running oscee",
      "type": "object",
      "properties": {
        "type": {
          "const": "shell"
        },
        "params": {
          "description": "Shell action params",
          "type": "object",
          "properties": {
            "_command": {
              "description": "JS literal template of the shell command. Will have access to the properties of the incoming message that triggered this action",
              "type": "string"
            },
            "command": {
              "description": "Shell command to run _command takes priority",
              "type": "string"
            }
          }
        },
        "enabled": {
          "description": "Whether this action is enabled",
          "type": "boolean"
        }
      },
      "required": ["type", "enabled", "params"]
    },

    "ActionHTTP": {
      "title": "HTTP Action",
      "description": "This command will make the configured http call",
      "type": "object",
      "properties": {
        "type": {
          "const": "http"
        },
        "params": {
          "description": "HTTP action params",
          "type": "object",
          "properties": {
            "method": {
              "description": "The HTTP method to use i.e GET, POST, PUT",
              "type": "string",
              "enum": ["get", "post", "put", "delete", "patch", "GET", "POST", "PUT", "DELETE", "PATCH"]
            },
            "_url": {
              "description": "JS literal template of the url. Will have access to the properties of the incoming message that triggered this action",
              "type": "string"
            },
            "url": {
              "description": "Url to call",
              "type": "string"
            },
            "_body": {
              "description": "JS literal template of the body. Will have access to the properties of the incoming message that triggered this action",
              "type": "string"
            },
            "body": {
              "description": "Body to include with the request",
              "type": "string"
            },
            "contentType": {
              "description": "Content-Type header value mainly useful for POST/PUT/PATCH",
              "type": "string"
            }
          },
          "required": ["method"]
        },
        "enabled": {
          "description": "Whether this action is enabled",
          "type": "boolean"
        }
      },
      "required": ["type", "enabled", "params"]
    },

    "TriggerSender": {
      "title": "Sender Trigger",
      "description": "This trigger will match messages by sender",
      "type": "object",
      "properties": {
        "type": {
          "const": "sender"
        },
        "params": {
          "description": "Host trigger params",
          "type": "object",
          "properties": {
            "address": {
              "description": "Address of the server to match incoming messages against",
              "type": "string"
            }
          },
          "required": ["address"]
        },
        "actions": {
          "$ref": "#/definitions/ActionList"
        },
        "enabled": {
          "description": "Whether this trigger is enabled",
          "type": "boolean"
        }
      },
      "required": ["type", "enabled", "params"]
    },
    "TriggerBytesEqual": {
      "title": "Bytes Equal Trigger",
      "description": "This trigger will match incoming messages bytes to the ones set in params property",
      "type": "object",
      "properties": {
        "type": {
          "const": "bytes-equal"
        },
        "params": {
          "description": "bytes equal trigger params",
          "type": "object",
          "properties": {
            "bytes": {
              "description": "Array of 3 bytes that will be matched to the incoming message",
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 0,
                "maximum": 255
              }
            }
          },
          "required": ["bytes"]
        },
        "actions": {
          "$ref": "#/definitions/ActionList"
        },
        "enabled": {
          "description": "Whether this trigger is enabled",
          "type": "boolean"
        }
      },
      "required": ["type", "enabled", "params"]
    },
    "TriggerMIDINoteOff": {
      "title": "MIDI Note Off Trigger",
      "description": "The trigger will match incoming MIDI note off events",
      "type": "object",
      "properties": {
        "type": {
          "const": "midi-note-off"
        },
        "params": {
          "description": "MIDI note off trigger params",
          "type": "object",
          "properties": {
            "note": {
              "description": "Note value to match against incoming the messages",
              "type": "integer",
              "minimum": 0,
              "maximum": 127
            },
            "velocity": {
              "description": "Velocity value to match against the incoming message",
              "type": "integer",
              "minimum": 0,
              "maximum": 127
            }
          }
        },
        "actions": {
          "$ref": "#/definitions/ActionList"
        },
        "enabled": {
          "description": "Whether this trigger is enabled",
          "type": "boolean"
        }
      },
      "required": ["type", "enabled", "params"]
    },
    "TriggerMIDINoteOn": {
      "title": "MIDI Note On Trigger",
      "description": "The trigger will match incoming MIDI note on events",
      "type": "object",
      "properties": {
        "type": {
          "const": "midi-note-on"
        },
        "params": {
          "description": "MIDI note on trigger params",
          "type": "object",
          "properties": {
            "note": {
              "description": "note value to match against incoming the messages",
              "type": "integer",
              "minimum": 0,
              "maximum": 127
            },
            "velocity": {
              "description": "velocity value to match against the incoming message",
              "type": "integer",
              "minimum": 0,
              "maximum": 127
            }
          }
        },
        "actions": {
          "$ref": "#/definitions/ActionList"
        },
        "enabled": {
          "description": "Whether this trigger is enabled",
          "type": "boolean"
        }
      },
      "required": ["type", "enabled", "params"]
    },
    "TriggerRegex": {
      "title": "Regex Trigger",
      "description": "This trigger will match the incoming message properties to the regex patterns",
      "type": "object",
      "properties": {
        "type": {
          "const": "regex"
        },
        "params": {
          "description": "Regex trigger params",
          "type": "object",
          "properties": {
            "patterns": {
              "description": "an array of regex patterns",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "properties": {
              "description": "an array of properties on the msg to match the regex patterns to 1:1",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": ["patterns", "properties"]
        },
        "actions": {
          "$ref": "#/definitions/ActionList"
        },
        "enabled": {
          "description": "Whether this trigger is enabled",
          "type": "boolean"
        }
      },
      "required": ["type", "enabled", "params"]
    }
  }
}
